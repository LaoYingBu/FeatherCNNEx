cmake_minimum_required(VERSION 3.5)

set(OpenCV_DIR "/home/leejohnnie/tools/OpenCV-android-sdk/sdk/native/jni")

find_package(OpenCV QUIET COMPONENTS core highgui imgproc imgcodecs)
if(NOT OpenCV_FOUND)
    find_package(OpenCV REQUIRED COMPONENTS core highgui imgproc)
endif()

include(FindOpenMP)
if(OPENMP_FOUND)
	message(STATUS ${OpenMP_C_FLAGS})
	message(STATUS ${OpenMP_CXX_FLAGS})
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()
message(STATUS "OpenMP flags ${CMAKE_CXX_FLAGS}")

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../src)
if("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "aarch64")
    link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../build-android/arm64-v8a/install/feather/lib)
else("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "armv7-a")
    link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../build-android/armeabi-v7a/install/feather/lib)
endif ()
if( CMAKE_SYSTEM_PROCESSOR MATCHES armv7-a )
add_definitions(-mfpu=neon-fp16)
endif()
if("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "aarch64")
add_executable(feather_test64 test.cpp)
target_link_libraries(feather_test64 feather ${OpenCV_LIBS})
else("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "armv7-a")
add_executable(feather_test32 test.cpp)
target_link_libraries(feather_test32 feather ${OpenCV_LIBS})
endif ()
